name: Build and Push Docker Images

on:
  workflow_call:
    secrets:
      GHCR_PAT:
        required: true
      FLUX_REPO_PAT:
        required: true
    inputs:
      branch:
        required: true
        type: string
      version:
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  OWNER: ethangilles
  BACKEND_IMAGE: job-watch-backend
  FRONTEND_IMAGE: job-watch-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout correct branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Log input info
        run: |
          echo "Received build for branch=${{ inputs.branch }}, version=${{ inputs.version }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ethangilles
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.BACKEND_IMAGE }}:v${{ inputs.version }}
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.BACKEND_IMAGE }}:${{ inputs.branch }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.FRONTEND_IMAGE }}:v${{ inputs.version }}
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.FRONTEND_IMAGE }}:${{ inputs.branch }}

      - name: Trigger update in flux repo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.FLUX_REPO_PAT }}
          repository: ethangilles/kube-homelab
          event-type: update-jobwatch-deploy
          client-payload: |
            {
              "branch": "${{ inputs.branch }}",
              "version": "v${{ inputs.version }}"
            }
